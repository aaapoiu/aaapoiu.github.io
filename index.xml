<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aaapoiu</title>
    <link>https://aaapoiu.github.io/</link>
    <description>Recent content on aaapoiu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Apr 2021 18:58:48 +0900</lastBuildDate><atom:link href="https://aaapoiu.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Two Sum</title>
      <link>https://aaapoiu.github.io/post/leetcode/two-sum/</link>
      <pubDate>Thu, 29 Apr 2021 18:58:48 +0900</pubDate>
      
      <guid>https://aaapoiu.github.io/post/leetcode/two-sum/</guid>
      <description>problem https://leetcode.com/problems/two-sum
Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. Input: nums = [2,7,11,15], target = 9 Output: [0,1] Output: Because nums[0] + nums[1] == 9, we return [0, 1]. test case [2,5,5,11] 10 [1,2] [2,5,5,11] 13 [0,3] o(n^2) approach first approach  two loop array 를 탐색하면서, value 와 value 의 index 를 hashmap 으로 저장한다 array 를 다시 한번 탐색하면서 target - value 의 값이 haspmap 에 존재하는지, 존재한다면 index 가 현재 index 가 아닌지, 아니라면 답  class Solution { public int[] twoSum(int[] nums, int target) { Map&amp;lt;Integer /* value */, ArrayList&amp;lt;Integer&amp;gt; /* indices */&amp;gt; map = new HashMap&amp;lt;&amp;gt;(); int len = nums.</description>
    </item>
    
    <item>
      <title>First</title>
      <link>https://aaapoiu.github.io/post/first/</link>
      <pubDate>Thu, 29 Apr 2021 01:30:02 +0900</pubDate>
      
      <guid>https://aaapoiu.github.io/post/first/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
